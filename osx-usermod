#!/bin/sh
# osx-usermod --- add, remove, or tweak user accounts on OSX
# Author: Noah Friedman <friedman@splode.com>
# Created: 2011-08-04
# Public domain

# Commentary:
# Code:

nextuid()
{
    max=`dscl . -list /Users UniqueID | sort -ug -k2,2 | sed -ne '${s/^.* //p;}'`
    echo $(($max + 1))
}

useradd()
{
      user=$1
    passwd=$2
       uid=${3:-`nextuid`}
       gid=${4:-20}
     gecos=$5
      home=${6:-/Users/$user}
     shell=${7:-/bin/bash}

     set sysadminctl \
         -addUser  "$user"   \
         -password "$passwd" \
         -UID      "$uid"    \
         -GID      "$gid"    \
         -fullName "$gecos"  \
         -shell    "$shell"

     # sysadminctl will not create the home directory if it's specified
     # here, even if it doesn't exist yet or is under /Users.
     # Furthermore, createhomedir doesn't work at all, at least in OS 12.
     case $home in
         /Users/$user ) : ;;
         * ) set "$@" -home "$home" ;;
     esac

     "$@" $admin
}

adminuseradd()
{
      user=$1
    passwd=$2
    admin=-admin
    useradd "$@"

    admin_groups="wheel staff admin"
    for group in $admin_groups; do
        dseditgroup -o edit -a $user -t user $group
    done

    # Users without secureToken are still limited in certain operations.
    # Secure tokens can only be granted by accounts who already have one.
    # The initial secure token is granted to the first user created on the
    # system during first-time setup.
    # This copies the secure token from root to the new admin user.
    # TODO: add a switch to enable this selectively
    #sysadminctl -adminUser root -adminPassword - -secureTokenOn "$user" -password "$passwd" -interactive
}

userdel()
{
    user=$1
    shift

    for group in `dscl . list /Groups`; do
        dscl . delete /Groups/$group GroupMembership $user 2> /dev/null
    done

    sysadminctl -deleteUser $user "$@"
}

userhide()
{
    for user in "$@"; do
        dscl . create /Users/$user IsHidden 1
    done
}

userunhide()
{
    for user in "$@"; do
        dscl . delete /Users/$user IsHidden
    done
}

######
##
######

usage()
{
    progname=${0##*/}

    exec 1>&2
    case $# in
        0 ) : ;;
        * ) echo $progname: "$@"; echo ;;
    esac

    echo "\
Usage: $progname add  {-admin} [username] [passwd] [uid] [gid] {gcos} {homedir} {shell}
       $progname del           [username]
       $progname hide          [username]
"
    exit 1
}

cmd_add()
{
    cmd=useradd
    case $1 in
        -admin ) cmd=admin$cmd ; shift ;;
    esac

    case $# in
        [0-4] ) usage ;;
    esac

    $cmd "$@"
}

cmd_del()
{
    case $# in
        1 ) userdel "$@" ;;
        * ) usage ;;
    esac
}

cmd_hide()   { userhide   "$@"; }
cmd_unhide() { userunhide "$@"; }

main()
{
    case $1 in
        add | del | hide | unhide ) cmd=$1; shift; cmd_$cmd "$@" ;;
        * ) usage ;;
    esac
}

main "$@"

# eof
